ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM.c"
   1:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC5/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM.c **** *
   5:Generated_Source\PSoC5/PWM.c **** * Description:
   6:Generated_Source\PSoC5/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM.c **** *
  15:Generated_Source\PSoC5/PWM.c **** * Note:
  16:Generated_Source\PSoC5/PWM.c **** *
  17:Generated_Source\PSoC5/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM.c **** 
  24:Generated_Source\PSoC5/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC5/PWM.c **** 
  26:Generated_Source\PSoC5/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 2


  31:Generated_Source\PSoC5/PWM.c **** 
  32:Generated_Source\PSoC5/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC5/PWM.c **** 
  34:Generated_Source\PSoC5/PWM.c **** 
  35:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM.c **** *
  39:Generated_Source\PSoC5/PWM.c **** * Summary:
  40:Generated_Source\PSoC5/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM.c **** *
  44:Generated_Source\PSoC5/PWM.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM.c **** *  None
  46:Generated_Source\PSoC5/PWM.c **** *
  47:Generated_Source\PSoC5/PWM.c **** * Return:
  48:Generated_Source\PSoC5/PWM.c **** *  None
  49:Generated_Source\PSoC5/PWM.c **** *
  50:Generated_Source\PSoC5/PWM.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM.c **** *
  54:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC5/PWM.c **** {
  57:Generated_Source\PSoC5/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC5/PWM.c ****     {
  60:Generated_Source\PSoC5/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC5/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC5/PWM.c ****     }
  63:Generated_Source\PSoC5/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC5/PWM.c **** 
  65:Generated_Source\PSoC5/PWM.c **** }
  66:Generated_Source\PSoC5/PWM.c **** 
  67:Generated_Source\PSoC5/PWM.c **** 
  68:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM.c **** *
  72:Generated_Source\PSoC5/PWM.c **** * Summary:
  73:Generated_Source\PSoC5/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC5/PWM.c **** *
  77:Generated_Source\PSoC5/PWM.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM.c **** *  None
  79:Generated_Source\PSoC5/PWM.c **** *
  80:Generated_Source\PSoC5/PWM.c **** * Return:
  81:Generated_Source\PSoC5/PWM.c **** *  None
  82:Generated_Source\PSoC5/PWM.c **** *
  83:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC5/PWM.c **** {
  86:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC5/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 3


  88:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC5/PWM.c **** 
  90:Generated_Source\PSoC5/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC5/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC5/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM.c **** 
  97:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM.c **** 
 104:Generated_Source\PSoC5/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM.c **** 
 107:Generated_Source\PSoC5/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC5/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC5/PWM.c **** 
 111:Generated_Source\PSoC5/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM.c **** 
 115:Generated_Source\PSoC5/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC5/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM.c **** 
 123:Generated_Source\PSoC5/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC5/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM.c **** 
 133:Generated_Source\PSoC5/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM.c **** 
 136:Generated_Source\PSoC5/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM.c **** 
 138:Generated_Source\PSoC5/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM.c ****         #else
 141:Generated_Source\PSoC5/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM.c **** 
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 4


 145:Generated_Source\PSoC5/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM.c **** 
 149:Generated_Source\PSoC5/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM.c **** 
 153:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM.c **** 
 157:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM.c ****     #else
 163:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC5/PWM.c **** 
 165:Generated_Source\PSoC5/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM.c **** 
 171:Generated_Source\PSoC5/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC5/PWM.c **** 
 174:Generated_Source\PSoC5/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM.c **** }
 180:Generated_Source\PSoC5/PWM.c **** 
 181:Generated_Source\PSoC5/PWM.c **** 
 182:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM.c **** *
 186:Generated_Source\PSoC5/PWM.c **** * Summary:
 187:Generated_Source\PSoC5/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM.c **** *
 189:Generated_Source\PSoC5/PWM.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM.c **** *  None
 191:Generated_Source\PSoC5/PWM.c **** *
 192:Generated_Source\PSoC5/PWM.c **** * Return:
 193:Generated_Source\PSoC5/PWM.c **** *  None
 194:Generated_Source\PSoC5/PWM.c **** *
 195:Generated_Source\PSoC5/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM.c **** *
 198:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC5/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM.c **** 
 207:Generated_Source\PSoC5/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 75640040 		.word	1073767541
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_Enable, .-PWM_Enable
  46              		.section	.text.PWM_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_Stop, %function
  52              	PWM_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM.c **** }
 212:Generated_Source\PSoC5/PWM.c **** 
 213:Generated_Source\PSoC5/PWM.c **** 
 214:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM.c **** *
 218:Generated_Source\PSoC5/PWM.c **** * Summary:
 219:Generated_Source\PSoC5/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM.c **** *
 222:Generated_Source\PSoC5/PWM.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM.c **** *  None
 224:Generated_Source\PSoC5/PWM.c **** *
 225:Generated_Source\PSoC5/PWM.c **** * Return:
 226:Generated_Source\PSoC5/PWM.c **** *  None
 227:Generated_Source\PSoC5/PWM.c **** *
 228:Generated_Source\PSoC5/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM.c **** *
 232:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 6


 233:Generated_Source\PSoC5/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC5/PWM.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 75640040 		.word	1073767541
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_Stop, .-PWM_Stop
  72              		.section	.text.PWM_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_WriteCounter, %function
  78              	PWM_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM.c **** 
 239:Generated_Source\PSoC5/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM.c **** }
 245:Generated_Source\PSoC5/PWM.c **** 
 246:Generated_Source\PSoC5/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM.c **** 
 249:Generated_Source\PSoC5/PWM.c **** 
 250:Generated_Source\PSoC5/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC5/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM.c ****         *
 254:Generated_Source\PSoC5/PWM.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM.c ****         *
 258:Generated_Source\PSoC5/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM.c ****         *
 262:Generated_Source\PSoC5/PWM.c ****         * Return:
 263:Generated_Source\PSoC5/PWM.c ****         *  None
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 7


 264:Generated_Source\PSoC5/PWM.c ****         *
 265:Generated_Source\PSoC5/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM.c ****         {
 268:Generated_Source\PSoC5/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM.c **** 
 270:Generated_Source\PSoC5/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC5/PWM.c ****                 #else
 273:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM.c **** 
 276:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM.c **** 
 279:Generated_Source\PSoC5/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC5/PWM.c **** 
 281:Generated_Source\PSoC5/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC5/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM.c ****                 #else
 285:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM.c **** 
 288:Generated_Source\PSoC5/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC5/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM.c ****                 #else
 292:Generated_Source\PSoC5/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM.c **** 
 295:Generated_Source\PSoC5/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM.c **** 
 300:Generated_Source\PSoC5/PWM.c ****             #else
 301:Generated_Source\PSoC5/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM.c ****         }
 304:Generated_Source\PSoC5/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM.c **** 
 306:Generated_Source\PSoC5/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM.c **** 
 308:Generated_Source\PSoC5/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM.c **** 
 310:Generated_Source\PSoC5/PWM.c **** 
 311:Generated_Source\PSoC5/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM.c ****         * Function Name: PWM_SetCompareMode1
 313:Generated_Source\PSoC5/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM.c ****         *
 315:Generated_Source\PSoC5/PWM.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM.c ****         *
 318:Generated_Source\PSoC5/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 8


 321:Generated_Source\PSoC5/PWM.c ****         *
 322:Generated_Source\PSoC5/PWM.c ****         * Return:
 323:Generated_Source\PSoC5/PWM.c ****         *  None
 324:Generated_Source\PSoC5/PWM.c ****         *
 325:Generated_Source\PSoC5/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM.c ****         {
 328:Generated_Source\PSoC5/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC5/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM.c ****             #else
 332:Generated_Source\PSoC5/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM.c **** 
 335:Generated_Source\PSoC5/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC5/PWM.c ****         }
 340:Generated_Source\PSoC5/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM.c **** 
 342:Generated_Source\PSoC5/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM.c **** 
 344:Generated_Source\PSoC5/PWM.c **** 
 345:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM.c ****     *
 349:Generated_Source\PSoC5/PWM.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM.c ****     *
 352:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM.c ****     *
 356:Generated_Source\PSoC5/PWM.c ****     * Return:
 357:Generated_Source\PSoC5/PWM.c ****     *  None
 358:Generated_Source\PSoC5/PWM.c ****     *
 359:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM.c ****     {
 362:Generated_Source\PSoC5/PWM.c **** 
 363:Generated_Source\PSoC5/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM.c ****         #else
 367:Generated_Source\PSoC5/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM.c **** 
 370:Generated_Source\PSoC5/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC5/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC5/PWM.c ****     }
 375:Generated_Source\PSoC5/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM.c **** 
 377:Generated_Source\PSoC5/PWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 9


 378:Generated_Source\PSoC5/PWM.c **** 
 379:Generated_Source\PSoC5/PWM.c **** 
 380:Generated_Source\PSoC5/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM.c **** 
 382:Generated_Source\PSoC5/PWM.c **** 
 383:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM.c ****     *
 387:Generated_Source\PSoC5/PWM.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM.c ****     *
 393:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM.c ****     *
 396:Generated_Source\PSoC5/PWM.c ****     * Return:
 397:Generated_Source\PSoC5/PWM.c ****     *  None
 398:Generated_Source\PSoC5/PWM.c ****     *
 399:Generated_Source\PSoC5/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM.c ****     *
 402:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM.c ****                                        
 405:Generated_Source\PSoC5/PWM.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 08680040 		.word	1073768456
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_WriteCounter, .-PWM_WriteCounter
  97              		.section	.text.PWM_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_ReadCounter, %function
 103              	PWM_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM.c ****     }
 408:Generated_Source\PSoC5/PWM.c **** 
 409:Generated_Source\PSoC5/PWM.c **** 
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 10


 410:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM.c ****     *
 414:Generated_Source\PSoC5/PWM.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM.c ****     *
 418:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM.c ****     *  None
 420:Generated_Source\PSoC5/PWM.c ****     *
 421:Generated_Source\PSoC5/PWM.c ****     * Return:
 422:Generated_Source\PSoC5/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM.c ****     *
 424:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM.c **** 
 432:Generated_Source\PSoC5/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/PWM.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 14640040 		.word	1073767444
 123 0010 A8680040 		.word	1073768616
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 127              		.section	.text.PWM_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	PWM_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	PWM_WritePeriod, %function
 133              	PWM_WritePeriod:
 134              	.LFB6:
 435:Generated_Source\PSoC5/PWM.c **** 
 436:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UseStatus)
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 11


 437:Generated_Source\PSoC5/PWM.c **** 
 438:Generated_Source\PSoC5/PWM.c **** 
 439:Generated_Source\PSoC5/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC5/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM.c ****         *
 443:Generated_Source\PSoC5/PWM.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM.c ****         *
 446:Generated_Source\PSoC5/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM.c ****         *  None
 448:Generated_Source\PSoC5/PWM.c ****         *
 449:Generated_Source\PSoC5/PWM.c ****         * Return:
 450:Generated_Source\PSoC5/PWM.c ****         *  None
 451:Generated_Source\PSoC5/PWM.c ****         *
 452:Generated_Source\PSoC5/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM.c ****         {
 455:Generated_Source\PSoC5/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM.c ****             {
 457:Generated_Source\PSoC5/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC5/PWM.c ****             }
 459:Generated_Source\PSoC5/PWM.c ****         }
 460:Generated_Source\PSoC5/PWM.c **** 
 461:Generated_Source\PSoC5/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC5/PWM.c **** 
 463:Generated_Source\PSoC5/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM.c **** 
 465:Generated_Source\PSoC5/PWM.c **** 
 466:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM.c **** *
 470:Generated_Source\PSoC5/PWM.c **** * Summary:
 471:Generated_Source\PSoC5/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM.c **** *
 474:Generated_Source\PSoC5/PWM.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM.c **** *
 478:Generated_Source\PSoC5/PWM.c **** * Return:
 479:Generated_Source\PSoC5/PWM.c **** *  None
 480:Generated_Source\PSoC5/PWM.c **** *
 481:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM.c **** void PWM_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM.c ****     #else
 487:Generated_Source\PSoC5/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 88680040 		.word	1073768584
 149              		.cfi_endproc
 150              	.LFE6:
 151              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 152              		.section	.text.PWM_WriteCompare1,"ax",%progbits
 153              		.align	2
 154              		.global	PWM_WriteCompare1
 155              		.thumb
 156              		.thumb_func
 157              		.type	PWM_WriteCompare1, %function
 158              	PWM_WriteCompare1:
 159              	.LFB7:
 488:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM.c **** }
 490:Generated_Source\PSoC5/PWM.c **** 
 491:Generated_Source\PSoC5/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM.c **** 
 493:Generated_Source\PSoC5/PWM.c **** 
 494:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM.c ****     *
 498:Generated_Source\PSoC5/PWM.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM.c ****     *
 505:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM.c ****     *
 508:Generated_Source\PSoC5/PWM.c ****     * Return:
 509:Generated_Source\PSoC5/PWM.c ****     *  None
 510:Generated_Source\PSoC5/PWM.c ****     *
 511:Generated_Source\PSoC5/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM.c ****     *
 515:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM.c ****                                        
 518:Generated_Source\PSoC5/PWM.c ****     {
 519:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM.c ****         #else
 522:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM.c **** 
 525:Generated_Source\PSoC5/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 13


 526:Generated_Source\PSoC5/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM.c ****             #else
 529:Generated_Source\PSoC5/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM.c ****     }
 533:Generated_Source\PSoC5/PWM.c **** 
 534:Generated_Source\PSoC5/PWM.c **** 
 535:Generated_Source\PSoC5/PWM.c **** #else
 536:Generated_Source\PSoC5/PWM.c **** 
 537:Generated_Source\PSoC5/PWM.c **** 
 538:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM.c ****     *
 542:Generated_Source\PSoC5/PWM.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM.c ****     *
 548:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM.c ****     *
 551:Generated_Source\PSoC5/PWM.c ****     * Return:
 552:Generated_Source\PSoC5/PWM.c ****     *  None
 553:Generated_Source\PSoC5/PWM.c ****     *
 554:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM.c ****                                         
 557:Generated_Source\PSoC5/PWM.c ****     {
 160              		.loc 1 557 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 558:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM.c ****         #else
 561:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 561 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 48680040 		.word	1073768520
 174              		.cfi_endproc
 175              	.LFE7:
 176              		.size	PWM_WriteCompare1, .-PWM_WriteCompare1
 177              		.section	.text.PWM_WriteCompare2,"ax",%progbits
 178              		.align	2
 179              		.global	PWM_WriteCompare2
 180              		.thumb
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 14


 181              		.thumb_func
 182              		.type	PWM_WriteCompare2, %function
 183              	PWM_WriteCompare2:
 184              	.LFB8:
 562:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM.c ****     }
 564:Generated_Source\PSoC5/PWM.c **** 
 565:Generated_Source\PSoC5/PWM.c **** 
 566:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM.c ****     *
 570:Generated_Source\PSoC5/PWM.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM.c ****     *
 577:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM.c ****     *
 580:Generated_Source\PSoC5/PWM.c ****     * Return:
 581:Generated_Source\PSoC5/PWM.c ****     *  None
 582:Generated_Source\PSoC5/PWM.c ****     *
 583:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM.c ****                                         
 586:Generated_Source\PSoC5/PWM.c ****     {
 185              		.loc 1 586 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL3:
 587:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM.c ****         #else
 590:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 191              		.loc 1 590 0
 192 0000 014B     		ldr	r3, .L20
 193 0002 1880     		strh	r0, [r3]	@ movhi
 194 0004 7047     		bx	lr
 195              	.L21:
 196 0006 00BF     		.align	2
 197              	.L20:
 198 0008 68680040 		.word	1073768552
 199              		.cfi_endproc
 200              	.LFE8:
 201              		.size	PWM_WriteCompare2, .-PWM_WriteCompare2
 202              		.section	.text.PWM_Init,"ax",%progbits
 203              		.align	2
 204              		.global	PWM_Init
 205              		.thumb
 206              		.thumb_func
 207              		.type	PWM_Init, %function
 208              	PWM_Init:
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 15


 209              	.LFB1:
  85:Generated_Source\PSoC5/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 210              		.loc 1 85 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 08B5     		push	{r3, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 218              		.loc 1 117 0
 219 0002 104A     		ldr	r2, .L24
 220 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 221 0006 03F0C003 		and	r3, r3, #192
 222              	.LVL4:
 119:Generated_Source\PSoC5/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 223              		.loc 1 119 0
 224 000a 43F00903 		orr	r3, r3, #9
 225              	.LVL5:
 226 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 227              		.loc 1 129 0
 228 0010 1F32     		adds	r2, r2, #31
 229 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 230 0014 43F00103 		orr	r3, r3, #1
 231 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 232              		.loc 1 130 0
 233 001a 0132     		adds	r2, r2, #1
 234 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 001e 43F00103 		orr	r3, r3, #1
 236 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 237              		.loc 1 133 0
 238 0024 4FF4FF70 		mov	r0, #510
 239 0028 FFF7FEFF 		bl	PWM_WriteCounter
 240              	.LVL6:
 136:Generated_Source\PSoC5/PWM.c **** 
 241              		.loc 1 136 0
 242 002c 4FF4FF70 		mov	r0, #510
 243 0030 FFF7FEFF 		bl	PWM_WritePeriod
 244              	.LVL7:
 141:Generated_Source\PSoC5/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 245              		.loc 1 141 0
 246 0034 0020     		movs	r0, #0
 247 0036 FFF7FEFF 		bl	PWM_WriteCompare1
 248              	.LVL8:
 142:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 249              		.loc 1 142 0
 250 003a 0020     		movs	r0, #0
 251 003c FFF7FEFF 		bl	PWM_WriteCompare2
 252              	.LVL9:
 253 0040 08BD     		pop	{r3, pc}
 254              	.L25:
 255 0042 00BF     		.align	2
 256              	.L24:
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 16


 257 0044 75640040 		.word	1073767541
 258              		.cfi_endproc
 259              	.LFE1:
 260              		.size	PWM_Init, .-PWM_Init
 261              		.section	.text.PWM_Start,"ax",%progbits
 262              		.align	2
 263              		.global	PWM_Start
 264              		.thumb
 265              		.thumb_func
 266              		.type	PWM_Start, %function
 267              	PWM_Start:
 268              	.LFB0:
  56:Generated_Source\PSoC5/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 269              		.loc 1 56 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 08B5     		push	{r3, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM.c ****     {
 277              		.loc 1 58 0
 278 0002 054B     		ldr	r3, .L29
 279 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 0006 23B9     		cbnz	r3, .L27
  60:Generated_Source\PSoC5/PWM.c ****         PWM_initVar = 1u;
 281              		.loc 1 60 0
 282 0008 FFF7FEFF 		bl	PWM_Init
 283              	.LVL10:
  61:Generated_Source\PSoC5/PWM.c ****     }
 284              		.loc 1 61 0
 285 000c 0122     		movs	r2, #1
 286 000e 024B     		ldr	r3, .L29
 287 0010 1A70     		strb	r2, [r3]
 288              	.L27:
  63:Generated_Source\PSoC5/PWM.c **** 
 289              		.loc 1 63 0
 290 0012 FFF7FEFF 		bl	PWM_Enable
 291              	.LVL11:
 292 0016 08BD     		pop	{r3, pc}
 293              	.L30:
 294              		.align	2
 295              	.L29:
 296 0018 00000000 		.word	.LANCHOR0
 297              		.cfi_endproc
 298              	.LFE0:
 299              		.size	PWM_Start, .-PWM_Start
 300              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 301              		.align	2
 302              		.global	PWM_ReadControlRegister
 303              		.thumb
 304              		.thumb_func
 305              		.type	PWM_ReadControlRegister, %function
 306              	PWM_ReadControlRegister:
 307              	.LFB9:
 591:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 17


 592:Generated_Source\PSoC5/PWM.c ****     }
 593:Generated_Source\PSoC5/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM.c **** 
 595:Generated_Source\PSoC5/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM.c **** 
 597:Generated_Source\PSoC5/PWM.c **** 
 598:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteDeadTime
 600:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM.c ****     *
 602:Generated_Source\PSoC5/PWM.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM.c ****     *
 605:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM.c ****     *
 608:Generated_Source\PSoC5/PWM.c ****     * Return:
 609:Generated_Source\PSoC5/PWM.c ****     *  None
 610:Generated_Source\PSoC5/PWM.c ****     *
 611:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM.c ****     {
 614:Generated_Source\PSoC5/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM.c ****         #else
 618:Generated_Source\PSoC5/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM.c **** 
 622:Generated_Source\PSoC5/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM.c ****             #else
 627:Generated_Source\PSoC5/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM.c **** 
 630:Generated_Source\PSoC5/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM.c ****     }
 632:Generated_Source\PSoC5/PWM.c **** 
 633:Generated_Source\PSoC5/PWM.c **** 
 634:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM.c ****     *
 638:Generated_Source\PSoC5/PWM.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM.c ****     *
 641:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM.c ****     *  None
 643:Generated_Source\PSoC5/PWM.c ****     *
 644:Generated_Source\PSoC5/PWM.c ****     * Return:
 645:Generated_Source\PSoC5/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM.c ****     *
 647:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 18


 649:Generated_Source\PSoC5/PWM.c ****     {
 650:Generated_Source\PSoC5/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM.c ****         #else
 654:Generated_Source\PSoC5/PWM.c **** 
 655:Generated_Source\PSoC5/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC5/PWM.c ****             #else
 660:Generated_Source\PSoC5/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM.c ****     }
 664:Generated_Source\PSoC5/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM.c **** 
 666:Generated_Source\PSoC5/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM.c **** 
 668:Generated_Source\PSoC5/PWM.c **** 
 669:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM.c ****     *
 673:Generated_Source\PSoC5/PWM.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM.c ****     *
 677:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM.c ****     *
 680:Generated_Source\PSoC5/PWM.c ****     * Return:
 681:Generated_Source\PSoC5/PWM.c ****     *  None
 682:Generated_Source\PSoC5/PWM.c ****     *
 683:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM.c ****     {
 686:Generated_Source\PSoC5/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM.c ****     }
 688:Generated_Source\PSoC5/PWM.c **** 
 689:Generated_Source\PSoC5/PWM.c **** 
 690:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM.c ****     *
 694:Generated_Source\PSoC5/PWM.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM.c ****     *
 697:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM.c ****     *  None
 699:Generated_Source\PSoC5/PWM.c ****     *
 700:Generated_Source\PSoC5/PWM.c ****     * Return:
 701:Generated_Source\PSoC5/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM.c ****     *  [3]   : FIFO full
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 19


 706:Generated_Source\PSoC5/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM.c ****     *
 710:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM.c ****     {
 713:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM.c ****     }
 715:Generated_Source\PSoC5/PWM.c **** 
 716:Generated_Source\PSoC5/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM.c **** 
 718:Generated_Source\PSoC5/PWM.c **** 
 719:Generated_Source\PSoC5/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC5/PWM.c **** 
 721:Generated_Source\PSoC5/PWM.c **** 
 722:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM.c ****     *
 726:Generated_Source\PSoC5/PWM.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM.c ****     *
 730:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM.c ****     *  None
 732:Generated_Source\PSoC5/PWM.c ****     *
 733:Generated_Source\PSoC5/PWM.c ****     * Return:
 734:Generated_Source\PSoC5/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM.c ****     *
 736:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM.c ****     {
 308              		.loc 1 738 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM.c **** 
 741:Generated_Source\PSoC5/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 313              		.loc 1 741 0
 314 0000 014B     		ldr	r3, .L32
 315 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 316              	.LVL12:
 742:Generated_Source\PSoC5/PWM.c ****         return (result);
 743:Generated_Source\PSoC5/PWM.c ****     }
 317              		.loc 1 743 0
 318 0004 7047     		bx	lr
 319              	.L33:
 320 0006 00BF     		.align	2
 321              	.L32:
 322 0008 75640040 		.word	1073767541
 323              		.cfi_endproc
 324              	.LFE9:
 325              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 326              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 20


 327              		.align	2
 328              		.global	PWM_WriteControlRegister
 329              		.thumb
 330              		.thumb_func
 331              		.type	PWM_WriteControlRegister, %function
 332              	PWM_WriteControlRegister:
 333              	.LFB10:
 744:Generated_Source\PSoC5/PWM.c **** 
 745:Generated_Source\PSoC5/PWM.c **** 
 746:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM.c ****     *
 750:Generated_Source\PSoC5/PWM.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM.c ****     *
 754:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM.c ****     *
 761:Generated_Source\PSoC5/PWM.c ****     * Return:
 762:Generated_Source\PSoC5/PWM.c ****     *  None
 763:Generated_Source\PSoC5/PWM.c ****     *
 764:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM.c ****     {
 334              		.loc 1 766 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL13:
 767:Generated_Source\PSoC5/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 340              		.loc 1 767 0
 341 0000 014B     		ldr	r3, .L35
 342 0002 1870     		strb	r0, [r3]
 343 0004 7047     		bx	lr
 344              	.L36:
 345 0006 00BF     		.align	2
 346              	.L35:
 347 0008 75640040 		.word	1073767541
 348              		.cfi_endproc
 349              	.LFE10:
 350              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 351              		.section	.text.PWM_ReadCapture,"ax",%progbits
 352              		.align	2
 353              		.global	PWM_ReadCapture
 354              		.thumb
 355              		.thumb_func
 356              		.type	PWM_ReadCapture, %function
 357              	PWM_ReadCapture:
 358              	.LFB11:
 768:Generated_Source\PSoC5/PWM.c ****     }
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 21


 769:Generated_Source\PSoC5/PWM.c **** 
 770:Generated_Source\PSoC5/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC5/PWM.c **** 
 772:Generated_Source\PSoC5/PWM.c **** 
 773:Generated_Source\PSoC5/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM.c **** 
 775:Generated_Source\PSoC5/PWM.c **** 
 776:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM.c ****     *
 780:Generated_Source\PSoC5/PWM.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM.c ****     *
 783:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM.c ****     *  None
 785:Generated_Source\PSoC5/PWM.c ****     *
 786:Generated_Source\PSoC5/PWM.c ****     * Return:
 787:Generated_Source\PSoC5/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM.c ****     *
 789:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM.c ****     {
 359              		.loc 1 791 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 364              		.loc 1 792 0
 365 0000 014B     		ldr	r3, .L38
 366 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/PWM.c ****     }
 367              		.loc 1 793 0
 368 0004 80B2     		uxth	r0, r0
 369 0006 7047     		bx	lr
 370              	.L39:
 371              		.align	2
 372              	.L38:
 373 0008 A8680040 		.word	1073768616
 374              		.cfi_endproc
 375              	.LFE11:
 376              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 377              		.section	.text.PWM_ReadCompare1,"ax",%progbits
 378              		.align	2
 379              		.global	PWM_ReadCompare1
 380              		.thumb
 381              		.thumb_func
 382              		.type	PWM_ReadCompare1, %function
 383              	PWM_ReadCompare1:
 384              	.LFB12:
 794:Generated_Source\PSoC5/PWM.c **** 
 795:Generated_Source\PSoC5/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM.c **** 
 797:Generated_Source\PSoC5/PWM.c **** 
 798:Generated_Source\PSoC5/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM.c **** 
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 22


 800:Generated_Source\PSoC5/PWM.c **** 
 801:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadCompare
 803:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM.c ****     *
 805:Generated_Source\PSoC5/PWM.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM.c ****     *
 809:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM.c ****     *  None
 811:Generated_Source\PSoC5/PWM.c ****     *
 812:Generated_Source\PSoC5/PWM.c ****     * Return:
 813:Generated_Source\PSoC5/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM.c ****     *
 815:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM.c ****     {
 818:Generated_Source\PSoC5/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM.c ****         #else
 821:Generated_Source\PSoC5/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM.c ****     }
 824:Generated_Source\PSoC5/PWM.c **** 
 825:Generated_Source\PSoC5/PWM.c **** #else
 826:Generated_Source\PSoC5/PWM.c **** 
 827:Generated_Source\PSoC5/PWM.c **** 
 828:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM.c ****     *
 832:Generated_Source\PSoC5/PWM.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM.c ****     *
 835:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM.c ****     *  None
 837:Generated_Source\PSoC5/PWM.c ****     *
 838:Generated_Source\PSoC5/PWM.c ****     * Return:
 839:Generated_Source\PSoC5/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM.c ****     *
 841:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM.c ****     {
 385              		.loc 1 843 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 390              		.loc 1 844 0
 391 0000 014B     		ldr	r3, .L41
 392 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/PWM.c ****     }
 393              		.loc 1 845 0
 394 0004 80B2     		uxth	r0, r0
 395 0006 7047     		bx	lr
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 23


 396              	.L42:
 397              		.align	2
 398              	.L41:
 399 0008 48680040 		.word	1073768520
 400              		.cfi_endproc
 401              	.LFE12:
 402              		.size	PWM_ReadCompare1, .-PWM_ReadCompare1
 403              		.section	.text.PWM_ReadCompare2,"ax",%progbits
 404              		.align	2
 405              		.global	PWM_ReadCompare2
 406              		.thumb
 407              		.thumb_func
 408              		.type	PWM_ReadCompare2, %function
 409              	PWM_ReadCompare2:
 410              	.LFB13:
 846:Generated_Source\PSoC5/PWM.c **** 
 847:Generated_Source\PSoC5/PWM.c **** 
 848:Generated_Source\PSoC5/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC5/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM.c ****     *
 852:Generated_Source\PSoC5/PWM.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM.c ****     *
 855:Generated_Source\PSoC5/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM.c ****     *  None
 857:Generated_Source\PSoC5/PWM.c ****     *
 858:Generated_Source\PSoC5/PWM.c ****     * Return:
 859:Generated_Source\PSoC5/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM.c ****     *
 861:Generated_Source\PSoC5/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM.c ****     {
 411              		.loc 1 863 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 416              		.loc 1 864 0
 417 0000 014B     		ldr	r3, .L44
 418 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/PWM.c ****     }
 419              		.loc 1 865 0
 420 0004 80B2     		uxth	r0, r0
 421 0006 7047     		bx	lr
 422              	.L45:
 423              		.align	2
 424              	.L44:
 425 0008 68680040 		.word	1073768552
 426              		.cfi_endproc
 427              	.LFE13:
 428              		.size	PWM_ReadCompare2, .-PWM_ReadCompare2
 429              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 430              		.align	2
 431              		.global	PWM_ReadPeriod
 432              		.thumb
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 24


 433              		.thumb_func
 434              		.type	PWM_ReadPeriod, %function
 435              	PWM_ReadPeriod:
 436              	.LFB14:
 866:Generated_Source\PSoC5/PWM.c **** 
 867:Generated_Source\PSoC5/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM.c **** 
 869:Generated_Source\PSoC5/PWM.c **** 
 870:Generated_Source\PSoC5/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC5/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM.c **** *
 874:Generated_Source\PSoC5/PWM.c **** * Summary:
 875:Generated_Source\PSoC5/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM.c **** *
 877:Generated_Source\PSoC5/PWM.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM.c **** *  None
 879:Generated_Source\PSoC5/PWM.c **** *
 880:Generated_Source\PSoC5/PWM.c **** * Return:
 881:Generated_Source\PSoC5/PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM.c **** *
 883:Generated_Source\PSoC5/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM.c **** {
 437              		.loc 1 885 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM.c ****     #else
 889:Generated_Source\PSoC5/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 442              		.loc 1 889 0
 443 0000 014B     		ldr	r3, .L47
 444 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM.c **** }
 445              		.loc 1 891 0
 446 0004 80B2     		uxth	r0, r0
 447 0006 7047     		bx	lr
 448              	.L48:
 449              		.align	2
 450              	.L47:
 451 0008 88680040 		.word	1073768584
 452              		.cfi_endproc
 453              	.LFE14:
 454              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 455              		.global	PWM_initVar
 456              		.bss
 457              		.set	.LANCHOR0,. + 0
 458              		.type	PWM_initVar, %object
 459              		.size	PWM_initVar, 1
 460              	PWM_initVar:
 461 0000 00       		.space	1
 462              		.text
 463              	.Letext0:
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 25


 464              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 465              		.section	.debug_info,"",%progbits
 466              	.Ldebug_info0:
 467 0000 E1020000 		.4byte	0x2e1
 468 0004 0400     		.2byte	0x4
 469 0006 00000000 		.4byte	.Ldebug_abbrev0
 470 000a 04       		.byte	0x4
 471 000b 01       		.uleb128 0x1
 472 000c 66000000 		.4byte	.LASF38
 473 0010 0C       		.byte	0xc
 474 0011 C1020000 		.4byte	.LASF39
 475 0015 67010000 		.4byte	.LASF40
 476 0019 00000000 		.4byte	.Ldebug_ranges0+0
 477 001d 00000000 		.4byte	0
 478 0021 00000000 		.4byte	.Ldebug_line0
 479 0025 02       		.uleb128 0x2
 480 0026 01       		.byte	0x1
 481 0027 06       		.byte	0x6
 482 0028 85020000 		.4byte	.LASF0
 483 002c 02       		.uleb128 0x2
 484 002d 01       		.byte	0x1
 485 002e 08       		.byte	0x8
 486 002f 58000000 		.4byte	.LASF1
 487 0033 02       		.uleb128 0x2
 488 0034 02       		.byte	0x2
 489 0035 05       		.byte	0x5
 490 0036 24020000 		.4byte	.LASF2
 491 003a 02       		.uleb128 0x2
 492 003b 02       		.byte	0x2
 493 003c 07       		.byte	0x7
 494 003d 27000000 		.4byte	.LASF3
 495 0041 02       		.uleb128 0x2
 496 0042 04       		.byte	0x4
 497 0043 05       		.byte	0x5
 498 0044 5A020000 		.4byte	.LASF4
 499 0048 02       		.uleb128 0x2
 500 0049 04       		.byte	0x4
 501 004a 07       		.byte	0x7
 502 004b F9000000 		.4byte	.LASF5
 503 004f 02       		.uleb128 0x2
 504 0050 08       		.byte	0x8
 505 0051 05       		.byte	0x5
 506 0052 E9010000 		.4byte	.LASF6
 507 0056 02       		.uleb128 0x2
 508 0057 08       		.byte	0x8
 509 0058 07       		.byte	0x7
 510 0059 50010000 		.4byte	.LASF7
 511 005d 03       		.uleb128 0x3
 512 005e 04       		.byte	0x4
 513 005f 05       		.byte	0x5
 514 0060 696E7400 		.ascii	"int\000"
 515 0064 02       		.uleb128 0x2
 516 0065 04       		.byte	0x4
 517 0066 07       		.byte	0x7
 518 0067 43010000 		.4byte	.LASF8
 519 006b 04       		.uleb128 0x4
 520 006c 1B010000 		.4byte	.LASF9
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 26


 521 0070 02       		.byte	0x2
 522 0071 E801     		.2byte	0x1e8
 523 0073 2C000000 		.4byte	0x2c
 524 0077 04       		.uleb128 0x4
 525 0078 30010000 		.4byte	.LASF10
 526 007c 02       		.byte	0x2
 527 007d E901     		.2byte	0x1e9
 528 007f 3A000000 		.4byte	0x3a
 529 0083 02       		.uleb128 0x2
 530 0084 04       		.byte	0x4
 531 0085 04       		.byte	0x4
 532 0086 4A000000 		.4byte	.LASF11
 533 008a 02       		.uleb128 0x2
 534 008b 08       		.byte	0x8
 535 008c 04       		.byte	0x4
 536 008d 29010000 		.4byte	.LASF12
 537 0091 02       		.uleb128 0x2
 538 0092 01       		.byte	0x1
 539 0093 08       		.byte	0x8
 540 0094 F7010000 		.4byte	.LASF13
 541 0098 04       		.uleb128 0x4
 542 0099 F4000000 		.4byte	.LASF14
 543 009d 02       		.byte	0x2
 544 009e 9202     		.2byte	0x292
 545 00a0 A4000000 		.4byte	0xa4
 546 00a4 05       		.uleb128 0x5
 547 00a5 6B000000 		.4byte	0x6b
 548 00a9 04       		.uleb128 0x4
 549 00aa 00000000 		.4byte	.LASF15
 550 00ae 02       		.byte	0x2
 551 00af 9302     		.2byte	0x293
 552 00b1 B5000000 		.4byte	0xb5
 553 00b5 05       		.uleb128 0x5
 554 00b6 77000000 		.4byte	0x77
 555 00ba 02       		.uleb128 0x2
 556 00bb 08       		.byte	0x8
 557 00bc 04       		.byte	0x4
 558 00bd D4010000 		.4byte	.LASF16
 559 00c1 02       		.uleb128 0x2
 560 00c2 04       		.byte	0x4
 561 00c3 07       		.byte	0x7
 562 00c4 E0010000 		.4byte	.LASF17
 563 00c8 06       		.uleb128 0x6
 564 00c9 99020000 		.4byte	.LASF18
 565 00cd 01       		.byte	0x1
 566 00ce C7       		.byte	0xc7
 567 00cf 00000000 		.4byte	.LFB2
 568 00d3 10000000 		.4byte	.LFE2-.LFB2
 569 00d7 01       		.uleb128 0x1
 570 00d8 9C       		.byte	0x9c
 571 00d9 06       		.uleb128 0x6
 572 00da 51020000 		.4byte	.LASF19
 573 00de 01       		.byte	0x1
 574 00df E9       		.byte	0xe9
 575 00e0 00000000 		.4byte	.LFB3
 576 00e4 10000000 		.4byte	.LFE3-.LFB3
 577 00e8 01       		.uleb128 0x1
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 27


 578 00e9 9C       		.byte	0x9c
 579 00ea 07       		.uleb128 0x7
 580 00eb 40020000 		.4byte	.LASF20
 581 00ef 01       		.byte	0x1
 582 00f0 9301     		.2byte	0x193
 583 00f2 00000000 		.4byte	.LFB4
 584 00f6 0C000000 		.4byte	.LFE4-.LFB4
 585 00fa 01       		.uleb128 0x1
 586 00fb 9C       		.byte	0x9c
 587 00fc 0F010000 		.4byte	0x10f
 588 0100 08       		.uleb128 0x8
 589 0101 50000000 		.4byte	.LASF22
 590 0105 01       		.byte	0x1
 591 0106 9301     		.2byte	0x193
 592 0108 77000000 		.4byte	0x77
 593 010c 01       		.uleb128 0x1
 594 010d 50       		.byte	0x50
 595 010e 00       		.byte	0
 596 010f 09       		.uleb128 0x9
 597 0110 0B010000 		.4byte	.LASF33
 598 0114 01       		.byte	0x1
 599 0115 A901     		.2byte	0x1a9
 600 0117 77000000 		.4byte	0x77
 601 011b 00000000 		.4byte	.LFB5
 602 011f 14000000 		.4byte	.LFE5-.LFB5
 603 0123 01       		.uleb128 0x1
 604 0124 9C       		.byte	0x9c
 605 0125 07       		.uleb128 0x7
 606 0126 C4010000 		.4byte	.LASF21
 607 012a 01       		.byte	0x1
 608 012b E201     		.2byte	0x1e2
 609 012d 00000000 		.4byte	.LFB6
 610 0131 0C000000 		.4byte	.LFE6-.LFB6
 611 0135 01       		.uleb128 0x1
 612 0136 9C       		.byte	0x9c
 613 0137 4A010000 		.4byte	0x14a
 614 013b 08       		.uleb128 0x8
 615 013c 16000000 		.4byte	.LASF23
 616 0140 01       		.byte	0x1
 617 0141 E201     		.2byte	0x1e2
 618 0143 77000000 		.4byte	0x77
 619 0147 01       		.uleb128 0x1
 620 0148 50       		.byte	0x50
 621 0149 00       		.byte	0
 622 014a 07       		.uleb128 0x7
 623 014b 2E020000 		.4byte	.LASF24
 624 014f 01       		.byte	0x1
 625 0150 2B02     		.2byte	0x22b
 626 0152 00000000 		.4byte	.LFB7
 627 0156 0C000000 		.4byte	.LFE7-.LFB7
 628 015a 01       		.uleb128 0x1
 629 015b 9C       		.byte	0x9c
 630 015c 6F010000 		.4byte	0x16f
 631 0160 08       		.uleb128 0x8
 632 0161 91020000 		.4byte	.LASF25
 633 0165 01       		.byte	0x1
 634 0166 2B02     		.2byte	0x22b
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 28


 635 0168 77000000 		.4byte	0x77
 636 016c 01       		.uleb128 0x1
 637 016d 50       		.byte	0x50
 638 016e 00       		.byte	0
 639 016f 07       		.uleb128 0x7
 640 0170 B2010000 		.4byte	.LASF26
 641 0174 01       		.byte	0x1
 642 0175 4802     		.2byte	0x248
 643 0177 00000000 		.4byte	.LFB8
 644 017b 0C000000 		.4byte	.LFE8-.LFB8
 645 017f 01       		.uleb128 0x1
 646 0180 9C       		.byte	0x9c
 647 0181 94010000 		.4byte	0x194
 648 0185 08       		.uleb128 0x8
 649 0186 91020000 		.4byte	.LASF25
 650 018a 01       		.byte	0x1
 651 018b 4802     		.2byte	0x248
 652 018d 77000000 		.4byte	0x77
 653 0191 01       		.uleb128 0x1
 654 0192 50       		.byte	0x50
 655 0193 00       		.byte	0
 656 0194 0A       		.uleb128 0xa
 657 0195 06000000 		.4byte	.LASF27
 658 0199 01       		.byte	0x1
 659 019a 54       		.byte	0x54
 660 019b 00000000 		.4byte	.LFB1
 661 019f 48000000 		.4byte	.LFE1-.LFB1
 662 01a3 01       		.uleb128 0x1
 663 01a4 9C       		.byte	0x9c
 664 01a5 05020000 		.4byte	0x205
 665 01a9 0B       		.uleb128 0xb
 666 01aa BC020000 		.4byte	.LASF29
 667 01ae 01       		.byte	0x1
 668 01af 57       		.byte	0x57
 669 01b0 6B000000 		.4byte	0x6b
 670 01b4 00000000 		.4byte	.LLST0
 671 01b8 0C       		.uleb128 0xc
 672 01b9 2C000000 		.4byte	.LVL6
 673 01bd EA000000 		.4byte	0xea
 674 01c1 CD010000 		.4byte	0x1cd
 675 01c5 0D       		.uleb128 0xd
 676 01c6 01       		.uleb128 0x1
 677 01c7 50       		.byte	0x50
 678 01c8 03       		.uleb128 0x3
 679 01c9 0A       		.byte	0xa
 680 01ca FE01     		.2byte	0x1fe
 681 01cc 00       		.byte	0
 682 01cd 0C       		.uleb128 0xc
 683 01ce 34000000 		.4byte	.LVL7
 684 01d2 25010000 		.4byte	0x125
 685 01d6 E2010000 		.4byte	0x1e2
 686 01da 0D       		.uleb128 0xd
 687 01db 01       		.uleb128 0x1
 688 01dc 50       		.byte	0x50
 689 01dd 03       		.uleb128 0x3
 690 01de 0A       		.byte	0xa
 691 01df FE01     		.2byte	0x1fe
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 29


 692 01e1 00       		.byte	0
 693 01e2 0C       		.uleb128 0xc
 694 01e3 3A000000 		.4byte	.LVL8
 695 01e7 4A010000 		.4byte	0x14a
 696 01eb F5010000 		.4byte	0x1f5
 697 01ef 0D       		.uleb128 0xd
 698 01f0 01       		.uleb128 0x1
 699 01f1 50       		.byte	0x50
 700 01f2 01       		.uleb128 0x1
 701 01f3 30       		.byte	0x30
 702 01f4 00       		.byte	0
 703 01f5 0E       		.uleb128 0xe
 704 01f6 40000000 		.4byte	.LVL9
 705 01fa 6F010000 		.4byte	0x16f
 706 01fe 0D       		.uleb128 0xd
 707 01ff 01       		.uleb128 0x1
 708 0200 50       		.byte	0x50
 709 0201 01       		.uleb128 0x1
 710 0202 30       		.byte	0x30
 711 0203 00       		.byte	0
 712 0204 00       		.byte	0
 713 0205 0A       		.uleb128 0xa
 714 0206 1D000000 		.4byte	.LASF28
 715 020a 01       		.byte	0x1
 716 020b 37       		.byte	0x37
 717 020c 00000000 		.4byte	.LFB0
 718 0210 1C000000 		.4byte	.LFE0-.LFB0
 719 0214 01       		.uleb128 0x1
 720 0215 9C       		.byte	0x9c
 721 0216 2D020000 		.4byte	0x22d
 722 021a 0F       		.uleb128 0xf
 723 021b 0C000000 		.4byte	.LVL10
 724 021f 94010000 		.4byte	0x194
 725 0223 0F       		.uleb128 0xf
 726 0224 16000000 		.4byte	.LVL11
 727 0228 C8000000 		.4byte	0xc8
 728 022c 00       		.byte	0
 729 022d 10       		.uleb128 0x10
 730 022e A4020000 		.4byte	.LASF41
 731 0232 01       		.byte	0x1
 732 0233 E102     		.2byte	0x2e1
 733 0235 6B000000 		.4byte	0x6b
 734 0239 00000000 		.4byte	.LFB9
 735 023d 0C000000 		.4byte	.LFE9-.LFB9
 736 0241 01       		.uleb128 0x1
 737 0242 9C       		.byte	0x9c
 738 0243 56020000 		.4byte	0x256
 739 0247 11       		.uleb128 0x11
 740 0248 0F000000 		.4byte	.LASF30
 741 024c 01       		.byte	0x1
 742 024d E302     		.2byte	0x2e3
 743 024f 6B000000 		.4byte	0x6b
 744 0253 01       		.uleb128 0x1
 745 0254 50       		.byte	0x50
 746 0255 00       		.byte	0
 747 0256 07       		.uleb128 0x7
 748 0257 FC010000 		.4byte	.LASF31
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 30


 749 025b 01       		.byte	0x1
 750 025c FD02     		.2byte	0x2fd
 751 025e 00000000 		.4byte	.LFB10
 752 0262 0C000000 		.4byte	.LFE10-.LFB10
 753 0266 01       		.uleb128 0x1
 754 0267 9C       		.byte	0x9c
 755 0268 7B020000 		.4byte	0x27b
 756 026c 08       		.uleb128 0x8
 757 026d 21010000 		.4byte	.LASF32
 758 0271 01       		.byte	0x1
 759 0272 FD02     		.2byte	0x2fd
 760 0274 6B000000 		.4byte	0x6b
 761 0278 01       		.uleb128 0x1
 762 0279 50       		.byte	0x50
 763 027a 00       		.byte	0
 764 027b 09       		.uleb128 0x9
 765 027c 3A000000 		.4byte	.LASF34
 766 0280 01       		.byte	0x1
 767 0281 1603     		.2byte	0x316
 768 0283 77000000 		.4byte	0x77
 769 0287 00000000 		.4byte	.LFB11
 770 028b 0C000000 		.4byte	.LFE11-.LFB11
 771 028f 01       		.uleb128 0x1
 772 0290 9C       		.byte	0x9c
 773 0291 09       		.uleb128 0x9
 774 0292 63020000 		.4byte	.LASF35
 775 0296 01       		.byte	0x1
 776 0297 4A03     		.2byte	0x34a
 777 0299 77000000 		.4byte	0x77
 778 029d 00000000 		.4byte	.LFB12
 779 02a1 0C000000 		.4byte	.LFE12-.LFB12
 780 02a5 01       		.uleb128 0x1
 781 02a6 9C       		.byte	0x9c
 782 02a7 09       		.uleb128 0x9
 783 02a8 74020000 		.4byte	.LASF36
 784 02ac 01       		.byte	0x1
 785 02ad 5E03     		.2byte	0x35e
 786 02af 77000000 		.4byte	0x77
 787 02b3 00000000 		.4byte	.LFB13
 788 02b7 0C000000 		.4byte	.LFE13-.LFB13
 789 02bb 01       		.uleb128 0x1
 790 02bc 9C       		.byte	0x9c
 791 02bd 09       		.uleb128 0x9
 792 02be 15020000 		.4byte	.LASF37
 793 02c2 01       		.byte	0x1
 794 02c3 7403     		.2byte	0x374
 795 02c5 77000000 		.4byte	0x77
 796 02c9 00000000 		.4byte	.LFB14
 797 02cd 0C000000 		.4byte	.LFE14-.LFB14
 798 02d1 01       		.uleb128 0x1
 799 02d2 9C       		.byte	0x9c
 800 02d3 12       		.uleb128 0x12
 801 02d4 37010000 		.4byte	.LASF42
 802 02d8 01       		.byte	0x1
 803 02d9 20       		.byte	0x20
 804 02da 6B000000 		.4byte	0x6b
 805 02de 05       		.uleb128 0x5
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 31


 806 02df 03       		.byte	0x3
 807 02e0 00000000 		.4byte	PWM_initVar
 808 02e4 00       		.byte	0
 809              		.section	.debug_abbrev,"",%progbits
 810              	.Ldebug_abbrev0:
 811 0000 01       		.uleb128 0x1
 812 0001 11       		.uleb128 0x11
 813 0002 01       		.byte	0x1
 814 0003 25       		.uleb128 0x25
 815 0004 0E       		.uleb128 0xe
 816 0005 13       		.uleb128 0x13
 817 0006 0B       		.uleb128 0xb
 818 0007 03       		.uleb128 0x3
 819 0008 0E       		.uleb128 0xe
 820 0009 1B       		.uleb128 0x1b
 821 000a 0E       		.uleb128 0xe
 822 000b 55       		.uleb128 0x55
 823 000c 17       		.uleb128 0x17
 824 000d 11       		.uleb128 0x11
 825 000e 01       		.uleb128 0x1
 826 000f 10       		.uleb128 0x10
 827 0010 17       		.uleb128 0x17
 828 0011 00       		.byte	0
 829 0012 00       		.byte	0
 830 0013 02       		.uleb128 0x2
 831 0014 24       		.uleb128 0x24
 832 0015 00       		.byte	0
 833 0016 0B       		.uleb128 0xb
 834 0017 0B       		.uleb128 0xb
 835 0018 3E       		.uleb128 0x3e
 836 0019 0B       		.uleb128 0xb
 837 001a 03       		.uleb128 0x3
 838 001b 0E       		.uleb128 0xe
 839 001c 00       		.byte	0
 840 001d 00       		.byte	0
 841 001e 03       		.uleb128 0x3
 842 001f 24       		.uleb128 0x24
 843 0020 00       		.byte	0
 844 0021 0B       		.uleb128 0xb
 845 0022 0B       		.uleb128 0xb
 846 0023 3E       		.uleb128 0x3e
 847 0024 0B       		.uleb128 0xb
 848 0025 03       		.uleb128 0x3
 849 0026 08       		.uleb128 0x8
 850 0027 00       		.byte	0
 851 0028 00       		.byte	0
 852 0029 04       		.uleb128 0x4
 853 002a 16       		.uleb128 0x16
 854 002b 00       		.byte	0
 855 002c 03       		.uleb128 0x3
 856 002d 0E       		.uleb128 0xe
 857 002e 3A       		.uleb128 0x3a
 858 002f 0B       		.uleb128 0xb
 859 0030 3B       		.uleb128 0x3b
 860 0031 05       		.uleb128 0x5
 861 0032 49       		.uleb128 0x49
 862 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 32


 863 0034 00       		.byte	0
 864 0035 00       		.byte	0
 865 0036 05       		.uleb128 0x5
 866 0037 35       		.uleb128 0x35
 867 0038 00       		.byte	0
 868 0039 49       		.uleb128 0x49
 869 003a 13       		.uleb128 0x13
 870 003b 00       		.byte	0
 871 003c 00       		.byte	0
 872 003d 06       		.uleb128 0x6
 873 003e 2E       		.uleb128 0x2e
 874 003f 00       		.byte	0
 875 0040 3F       		.uleb128 0x3f
 876 0041 19       		.uleb128 0x19
 877 0042 03       		.uleb128 0x3
 878 0043 0E       		.uleb128 0xe
 879 0044 3A       		.uleb128 0x3a
 880 0045 0B       		.uleb128 0xb
 881 0046 3B       		.uleb128 0x3b
 882 0047 0B       		.uleb128 0xb
 883 0048 27       		.uleb128 0x27
 884 0049 19       		.uleb128 0x19
 885 004a 11       		.uleb128 0x11
 886 004b 01       		.uleb128 0x1
 887 004c 12       		.uleb128 0x12
 888 004d 06       		.uleb128 0x6
 889 004e 40       		.uleb128 0x40
 890 004f 18       		.uleb128 0x18
 891 0050 9742     		.uleb128 0x2117
 892 0052 19       		.uleb128 0x19
 893 0053 00       		.byte	0
 894 0054 00       		.byte	0
 895 0055 07       		.uleb128 0x7
 896 0056 2E       		.uleb128 0x2e
 897 0057 01       		.byte	0x1
 898 0058 3F       		.uleb128 0x3f
 899 0059 19       		.uleb128 0x19
 900 005a 03       		.uleb128 0x3
 901 005b 0E       		.uleb128 0xe
 902 005c 3A       		.uleb128 0x3a
 903 005d 0B       		.uleb128 0xb
 904 005e 3B       		.uleb128 0x3b
 905 005f 05       		.uleb128 0x5
 906 0060 27       		.uleb128 0x27
 907 0061 19       		.uleb128 0x19
 908 0062 11       		.uleb128 0x11
 909 0063 01       		.uleb128 0x1
 910 0064 12       		.uleb128 0x12
 911 0065 06       		.uleb128 0x6
 912 0066 40       		.uleb128 0x40
 913 0067 18       		.uleb128 0x18
 914 0068 9742     		.uleb128 0x2117
 915 006a 19       		.uleb128 0x19
 916 006b 01       		.uleb128 0x1
 917 006c 13       		.uleb128 0x13
 918 006d 00       		.byte	0
 919 006e 00       		.byte	0
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 33


 920 006f 08       		.uleb128 0x8
 921 0070 05       		.uleb128 0x5
 922 0071 00       		.byte	0
 923 0072 03       		.uleb128 0x3
 924 0073 0E       		.uleb128 0xe
 925 0074 3A       		.uleb128 0x3a
 926 0075 0B       		.uleb128 0xb
 927 0076 3B       		.uleb128 0x3b
 928 0077 05       		.uleb128 0x5
 929 0078 49       		.uleb128 0x49
 930 0079 13       		.uleb128 0x13
 931 007a 02       		.uleb128 0x2
 932 007b 18       		.uleb128 0x18
 933 007c 00       		.byte	0
 934 007d 00       		.byte	0
 935 007e 09       		.uleb128 0x9
 936 007f 2E       		.uleb128 0x2e
 937 0080 00       		.byte	0
 938 0081 3F       		.uleb128 0x3f
 939 0082 19       		.uleb128 0x19
 940 0083 03       		.uleb128 0x3
 941 0084 0E       		.uleb128 0xe
 942 0085 3A       		.uleb128 0x3a
 943 0086 0B       		.uleb128 0xb
 944 0087 3B       		.uleb128 0x3b
 945 0088 05       		.uleb128 0x5
 946 0089 27       		.uleb128 0x27
 947 008a 19       		.uleb128 0x19
 948 008b 49       		.uleb128 0x49
 949 008c 13       		.uleb128 0x13
 950 008d 11       		.uleb128 0x11
 951 008e 01       		.uleb128 0x1
 952 008f 12       		.uleb128 0x12
 953 0090 06       		.uleb128 0x6
 954 0091 40       		.uleb128 0x40
 955 0092 18       		.uleb128 0x18
 956 0093 9742     		.uleb128 0x2117
 957 0095 19       		.uleb128 0x19
 958 0096 00       		.byte	0
 959 0097 00       		.byte	0
 960 0098 0A       		.uleb128 0xa
 961 0099 2E       		.uleb128 0x2e
 962 009a 01       		.byte	0x1
 963 009b 3F       		.uleb128 0x3f
 964 009c 19       		.uleb128 0x19
 965 009d 03       		.uleb128 0x3
 966 009e 0E       		.uleb128 0xe
 967 009f 3A       		.uleb128 0x3a
 968 00a0 0B       		.uleb128 0xb
 969 00a1 3B       		.uleb128 0x3b
 970 00a2 0B       		.uleb128 0xb
 971 00a3 27       		.uleb128 0x27
 972 00a4 19       		.uleb128 0x19
 973 00a5 11       		.uleb128 0x11
 974 00a6 01       		.uleb128 0x1
 975 00a7 12       		.uleb128 0x12
 976 00a8 06       		.uleb128 0x6
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 34


 977 00a9 40       		.uleb128 0x40
 978 00aa 18       		.uleb128 0x18
 979 00ab 9742     		.uleb128 0x2117
 980 00ad 19       		.uleb128 0x19
 981 00ae 01       		.uleb128 0x1
 982 00af 13       		.uleb128 0x13
 983 00b0 00       		.byte	0
 984 00b1 00       		.byte	0
 985 00b2 0B       		.uleb128 0xb
 986 00b3 34       		.uleb128 0x34
 987 00b4 00       		.byte	0
 988 00b5 03       		.uleb128 0x3
 989 00b6 0E       		.uleb128 0xe
 990 00b7 3A       		.uleb128 0x3a
 991 00b8 0B       		.uleb128 0xb
 992 00b9 3B       		.uleb128 0x3b
 993 00ba 0B       		.uleb128 0xb
 994 00bb 49       		.uleb128 0x49
 995 00bc 13       		.uleb128 0x13
 996 00bd 02       		.uleb128 0x2
 997 00be 17       		.uleb128 0x17
 998 00bf 00       		.byte	0
 999 00c0 00       		.byte	0
 1000 00c1 0C       		.uleb128 0xc
 1001 00c2 898201   		.uleb128 0x4109
 1002 00c5 01       		.byte	0x1
 1003 00c6 11       		.uleb128 0x11
 1004 00c7 01       		.uleb128 0x1
 1005 00c8 31       		.uleb128 0x31
 1006 00c9 13       		.uleb128 0x13
 1007 00ca 01       		.uleb128 0x1
 1008 00cb 13       		.uleb128 0x13
 1009 00cc 00       		.byte	0
 1010 00cd 00       		.byte	0
 1011 00ce 0D       		.uleb128 0xd
 1012 00cf 8A8201   		.uleb128 0x410a
 1013 00d2 00       		.byte	0
 1014 00d3 02       		.uleb128 0x2
 1015 00d4 18       		.uleb128 0x18
 1016 00d5 9142     		.uleb128 0x2111
 1017 00d7 18       		.uleb128 0x18
 1018 00d8 00       		.byte	0
 1019 00d9 00       		.byte	0
 1020 00da 0E       		.uleb128 0xe
 1021 00db 898201   		.uleb128 0x4109
 1022 00de 01       		.byte	0x1
 1023 00df 11       		.uleb128 0x11
 1024 00e0 01       		.uleb128 0x1
 1025 00e1 31       		.uleb128 0x31
 1026 00e2 13       		.uleb128 0x13
 1027 00e3 00       		.byte	0
 1028 00e4 00       		.byte	0
 1029 00e5 0F       		.uleb128 0xf
 1030 00e6 898201   		.uleb128 0x4109
 1031 00e9 00       		.byte	0
 1032 00ea 11       		.uleb128 0x11
 1033 00eb 01       		.uleb128 0x1
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 35


 1034 00ec 31       		.uleb128 0x31
 1035 00ed 13       		.uleb128 0x13
 1036 00ee 00       		.byte	0
 1037 00ef 00       		.byte	0
 1038 00f0 10       		.uleb128 0x10
 1039 00f1 2E       		.uleb128 0x2e
 1040 00f2 01       		.byte	0x1
 1041 00f3 3F       		.uleb128 0x3f
 1042 00f4 19       		.uleb128 0x19
 1043 00f5 03       		.uleb128 0x3
 1044 00f6 0E       		.uleb128 0xe
 1045 00f7 3A       		.uleb128 0x3a
 1046 00f8 0B       		.uleb128 0xb
 1047 00f9 3B       		.uleb128 0x3b
 1048 00fa 05       		.uleb128 0x5
 1049 00fb 27       		.uleb128 0x27
 1050 00fc 19       		.uleb128 0x19
 1051 00fd 49       		.uleb128 0x49
 1052 00fe 13       		.uleb128 0x13
 1053 00ff 11       		.uleb128 0x11
 1054 0100 01       		.uleb128 0x1
 1055 0101 12       		.uleb128 0x12
 1056 0102 06       		.uleb128 0x6
 1057 0103 40       		.uleb128 0x40
 1058 0104 18       		.uleb128 0x18
 1059 0105 9742     		.uleb128 0x2117
 1060 0107 19       		.uleb128 0x19
 1061 0108 01       		.uleb128 0x1
 1062 0109 13       		.uleb128 0x13
 1063 010a 00       		.byte	0
 1064 010b 00       		.byte	0
 1065 010c 11       		.uleb128 0x11
 1066 010d 34       		.uleb128 0x34
 1067 010e 00       		.byte	0
 1068 010f 03       		.uleb128 0x3
 1069 0110 0E       		.uleb128 0xe
 1070 0111 3A       		.uleb128 0x3a
 1071 0112 0B       		.uleb128 0xb
 1072 0113 3B       		.uleb128 0x3b
 1073 0114 05       		.uleb128 0x5
 1074 0115 49       		.uleb128 0x49
 1075 0116 13       		.uleb128 0x13
 1076 0117 02       		.uleb128 0x2
 1077 0118 18       		.uleb128 0x18
 1078 0119 00       		.byte	0
 1079 011a 00       		.byte	0
 1080 011b 12       		.uleb128 0x12
 1081 011c 34       		.uleb128 0x34
 1082 011d 00       		.byte	0
 1083 011e 03       		.uleb128 0x3
 1084 011f 0E       		.uleb128 0xe
 1085 0120 3A       		.uleb128 0x3a
 1086 0121 0B       		.uleb128 0xb
 1087 0122 3B       		.uleb128 0x3b
 1088 0123 0B       		.uleb128 0xb
 1089 0124 49       		.uleb128 0x49
 1090 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 36


 1091 0126 3F       		.uleb128 0x3f
 1092 0127 19       		.uleb128 0x19
 1093 0128 02       		.uleb128 0x2
 1094 0129 18       		.uleb128 0x18
 1095 012a 00       		.byte	0
 1096 012b 00       		.byte	0
 1097 012c 00       		.byte	0
 1098              		.section	.debug_loc,"",%progbits
 1099              	.Ldebug_loc0:
 1100              	.LLST0:
 1101 0000 0A000000 		.4byte	.LVL4
 1102 0004 0E000000 		.4byte	.LVL5
 1103 0008 0100     		.2byte	0x1
 1104 000a 53       		.byte	0x53
 1105 000b 00000000 		.4byte	0
 1106 000f 00000000 		.4byte	0
 1107              		.section	.debug_aranges,"",%progbits
 1108 0000 8C000000 		.4byte	0x8c
 1109 0004 0200     		.2byte	0x2
 1110 0006 00000000 		.4byte	.Ldebug_info0
 1111 000a 04       		.byte	0x4
 1112 000b 00       		.byte	0
 1113 000c 0000     		.2byte	0
 1114 000e 0000     		.2byte	0
 1115 0010 00000000 		.4byte	.LFB2
 1116 0014 10000000 		.4byte	.LFE2-.LFB2
 1117 0018 00000000 		.4byte	.LFB3
 1118 001c 10000000 		.4byte	.LFE3-.LFB3
 1119 0020 00000000 		.4byte	.LFB4
 1120 0024 0C000000 		.4byte	.LFE4-.LFB4
 1121 0028 00000000 		.4byte	.LFB5
 1122 002c 14000000 		.4byte	.LFE5-.LFB5
 1123 0030 00000000 		.4byte	.LFB6
 1124 0034 0C000000 		.4byte	.LFE6-.LFB6
 1125 0038 00000000 		.4byte	.LFB7
 1126 003c 0C000000 		.4byte	.LFE7-.LFB7
 1127 0040 00000000 		.4byte	.LFB8
 1128 0044 0C000000 		.4byte	.LFE8-.LFB8
 1129 0048 00000000 		.4byte	.LFB1
 1130 004c 48000000 		.4byte	.LFE1-.LFB1
 1131 0050 00000000 		.4byte	.LFB0
 1132 0054 1C000000 		.4byte	.LFE0-.LFB0
 1133 0058 00000000 		.4byte	.LFB9
 1134 005c 0C000000 		.4byte	.LFE9-.LFB9
 1135 0060 00000000 		.4byte	.LFB10
 1136 0064 0C000000 		.4byte	.LFE10-.LFB10
 1137 0068 00000000 		.4byte	.LFB11
 1138 006c 0C000000 		.4byte	.LFE11-.LFB11
 1139 0070 00000000 		.4byte	.LFB12
 1140 0074 0C000000 		.4byte	.LFE12-.LFB12
 1141 0078 00000000 		.4byte	.LFB13
 1142 007c 0C000000 		.4byte	.LFE13-.LFB13
 1143 0080 00000000 		.4byte	.LFB14
 1144 0084 0C000000 		.4byte	.LFE14-.LFB14
 1145 0088 00000000 		.4byte	0
 1146 008c 00000000 		.4byte	0
 1147              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 37


 1148              	.Ldebug_ranges0:
 1149 0000 00000000 		.4byte	.LFB2
 1150 0004 10000000 		.4byte	.LFE2
 1151 0008 00000000 		.4byte	.LFB3
 1152 000c 10000000 		.4byte	.LFE3
 1153 0010 00000000 		.4byte	.LFB4
 1154 0014 0C000000 		.4byte	.LFE4
 1155 0018 00000000 		.4byte	.LFB5
 1156 001c 14000000 		.4byte	.LFE5
 1157 0020 00000000 		.4byte	.LFB6
 1158 0024 0C000000 		.4byte	.LFE6
 1159 0028 00000000 		.4byte	.LFB7
 1160 002c 0C000000 		.4byte	.LFE7
 1161 0030 00000000 		.4byte	.LFB8
 1162 0034 0C000000 		.4byte	.LFE8
 1163 0038 00000000 		.4byte	.LFB1
 1164 003c 48000000 		.4byte	.LFE1
 1165 0040 00000000 		.4byte	.LFB0
 1166 0044 1C000000 		.4byte	.LFE0
 1167 0048 00000000 		.4byte	.LFB9
 1168 004c 0C000000 		.4byte	.LFE9
 1169 0050 00000000 		.4byte	.LFB10
 1170 0054 0C000000 		.4byte	.LFE10
 1171 0058 00000000 		.4byte	.LFB11
 1172 005c 0C000000 		.4byte	.LFE11
 1173 0060 00000000 		.4byte	.LFB12
 1174 0064 0C000000 		.4byte	.LFE12
 1175 0068 00000000 		.4byte	.LFB13
 1176 006c 0C000000 		.4byte	.LFE13
 1177 0070 00000000 		.4byte	.LFB14
 1178 0074 0C000000 		.4byte	.LFE14
 1179 0078 00000000 		.4byte	0
 1180 007c 00000000 		.4byte	0
 1181              		.section	.debug_line,"",%progbits
 1182              	.Ldebug_line0:
 1183 0000 5B010000 		.section	.debug_str,"MS",%progbits,1
 1183      02004000 
 1183      00000201 
 1183      FB0E0D00 
 1183      01010101 
 1184              	.LASF15:
 1185 0000 72656731 		.ascii	"reg16\000"
 1185      3600
 1186              	.LASF27:
 1187 0006 50574D5F 		.ascii	"PWM_Init\000"
 1187      496E6974 
 1187      00
 1188              	.LASF30:
 1189 000f 72657375 		.ascii	"result\000"
 1189      6C7400
 1190              	.LASF23:
 1191 0016 70657269 		.ascii	"period\000"
 1191      6F6400
 1192              	.LASF28:
 1193 001d 50574D5F 		.ascii	"PWM_Start\000"
 1193      53746172 
 1193      7400
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 38


 1194              	.LASF3:
 1195 0027 73686F72 		.ascii	"short unsigned int\000"
 1195      7420756E 
 1195      7369676E 
 1195      65642069 
 1195      6E7400
 1196              	.LASF34:
 1197 003a 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1197      52656164 
 1197      43617074 
 1197      75726500 
 1198              	.LASF11:
 1199 004a 666C6F61 		.ascii	"float\000"
 1199      7400
 1200              	.LASF22:
 1201 0050 636F756E 		.ascii	"counter\000"
 1201      74657200 
 1202              	.LASF1:
 1203 0058 756E7369 		.ascii	"unsigned char\000"
 1203      676E6564 
 1203      20636861 
 1203      7200
 1204              	.LASF38:
 1205 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1205      43313120 
 1205      352E342E 
 1205      31203230 
 1205      31363036 
 1206 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1206      20726576 
 1206      6973696F 
 1206      6E203233 
 1206      37373135 
 1207 00cc 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1207      66756E63 
 1207      74696F6E 
 1207      2D736563 
 1207      74696F6E 
 1208              	.LASF14:
 1209 00f4 72656738 		.ascii	"reg8\000"
 1209      00
 1210              	.LASF5:
 1211 00f9 6C6F6E67 		.ascii	"long unsigned int\000"
 1211      20756E73 
 1211      69676E65 
 1211      6420696E 
 1211      7400
 1212              	.LASF33:
 1213 010b 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1213      52656164 
 1213      436F756E 
 1213      74657200 
 1214              	.LASF9:
 1215 011b 75696E74 		.ascii	"uint8\000"
 1215      3800
 1216              	.LASF32:
 1217 0121 636F6E74 		.ascii	"control\000"
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 39


 1217      726F6C00 
 1218              	.LASF12:
 1219 0129 646F7562 		.ascii	"double\000"
 1219      6C6500
 1220              	.LASF10:
 1221 0130 75696E74 		.ascii	"uint16\000"
 1221      313600
 1222              	.LASF42:
 1223 0137 50574D5F 		.ascii	"PWM_initVar\000"
 1223      696E6974 
 1223      56617200 
 1224              	.LASF8:
 1225 0143 756E7369 		.ascii	"unsigned int\000"
 1225      676E6564 
 1225      20696E74 
 1225      00
 1226              	.LASF7:
 1227 0150 6C6F6E67 		.ascii	"long long unsigned int\000"
 1227      206C6F6E 
 1227      6720756E 
 1227      7369676E 
 1227      65642069 
 1228              	.LASF40:
 1229 0167 433A5C55 		.ascii	"C:\\Users\\E531\\Desktop\\Programables\\Programable"
 1229      73657273 
 1229      5C453533 
 1229      315C4465 
 1229      736B746F 
 1230 0195 735C576F 		.ascii	"s\\Workspace01\\Design01.cydsn\000"
 1230      726B7370 
 1230      61636530 
 1230      315C4465 
 1230      7369676E 
 1231              	.LASF26:
 1232 01b2 50574D5F 		.ascii	"PWM_WriteCompare2\000"
 1232      57726974 
 1232      65436F6D 
 1232      70617265 
 1232      3200
 1233              	.LASF21:
 1234 01c4 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1234      57726974 
 1234      65506572 
 1234      696F6400 
 1235              	.LASF16:
 1236 01d4 6C6F6E67 		.ascii	"long double\000"
 1236      20646F75 
 1236      626C6500 
 1237              	.LASF17:
 1238 01e0 73697A65 		.ascii	"sizetype\000"
 1238      74797065 
 1238      00
 1239              	.LASF6:
 1240 01e9 6C6F6E67 		.ascii	"long long int\000"
 1240      206C6F6E 
 1240      6720696E 
 1240      7400
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 40


 1241              	.LASF13:
 1242 01f7 63686172 		.ascii	"char\000"
 1242      00
 1243              	.LASF31:
 1244 01fc 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1244      57726974 
 1244      65436F6E 
 1244      74726F6C 
 1244      52656769 
 1245              	.LASF37:
 1246 0215 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1246      52656164 
 1246      50657269 
 1246      6F6400
 1247              	.LASF2:
 1248 0224 73686F72 		.ascii	"short int\000"
 1248      7420696E 
 1248      7400
 1249              	.LASF24:
 1250 022e 50574D5F 		.ascii	"PWM_WriteCompare1\000"
 1250      57726974 
 1250      65436F6D 
 1250      70617265 
 1250      3100
 1251              	.LASF20:
 1252 0240 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1252      57726974 
 1252      65436F75 
 1252      6E746572 
 1252      00
 1253              	.LASF19:
 1254 0251 50574D5F 		.ascii	"PWM_Stop\000"
 1254      53746F70 
 1254      00
 1255              	.LASF4:
 1256 025a 6C6F6E67 		.ascii	"long int\000"
 1256      20696E74 
 1256      00
 1257              	.LASF35:
 1258 0263 50574D5F 		.ascii	"PWM_ReadCompare1\000"
 1258      52656164 
 1258      436F6D70 
 1258      61726531 
 1258      00
 1259              	.LASF36:
 1260 0274 50574D5F 		.ascii	"PWM_ReadCompare2\000"
 1260      52656164 
 1260      436F6D70 
 1260      61726532 
 1260      00
 1261              	.LASF0:
 1262 0285 7369676E 		.ascii	"signed char\000"
 1262      65642063 
 1262      68617200 
 1263              	.LASF25:
 1264 0291 636F6D70 		.ascii	"compare\000"
 1264      61726500 
ARM GAS  C:\Users\E531\AppData\Local\Temp\ccmz6Eyl.s 			page 41


 1265              	.LASF18:
 1266 0299 50574D5F 		.ascii	"PWM_Enable\000"
 1266      456E6162 
 1266      6C6500
 1267              	.LASF41:
 1268 02a4 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1268      52656164 
 1268      436F6E74 
 1268      726F6C52 
 1268      65676973 
 1269              	.LASF29:
 1270 02bc 6374726C 		.ascii	"ctrl\000"
 1270      00
 1271              	.LASF39:
 1272 02c1 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM.c\000"
 1272      72617465 
 1272      645F536F 
 1272      75726365 
 1272      5C50536F 
 1273              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
